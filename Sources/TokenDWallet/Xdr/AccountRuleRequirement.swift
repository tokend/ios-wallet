// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  //: Defines requirements for tx or operation which were not fulfilled
//  struct AccountRuleRequirement
//  {
//  	//: defines resources to which access was denied
//      AccountRuleResource resource;
//  	//: defines action which was denied
//      AccountRuleAction action;
//  	//: defines account for which requirements were not met
//  	AccountID account;
//  
//  	//: reserved for future extension
//      EmptyExt ext;
//  };

//  ===========================================================================
public struct AccountRuleRequirement: XDRCodable {
  public var resource: AccountRuleResource
  public var action: AccountRuleAction
  public var account: AccountID
  public var ext: EmptyExt

  public init(
      resource: AccountRuleResource,
      action: AccountRuleAction,
      account: AccountID,
      ext: EmptyExt) {

    self.resource = resource
    self.action = action
    self.account = account
    self.ext = ext
  }

  public func toXDR() -> Data {
    var xdr = Data()

    xdr.append(self.resource.toXDR())
    xdr.append(self.action.toXDR())
    xdr.append(self.account.toXDR())
    xdr.append(self.ext.toXDR())

    return xdr
  }

  public init(xdrData: inout Data) throws {
    self.resource = try AccountRuleResource(xdrData: &xdrData)
    self.action = try AccountRuleAction(xdrData: &xdrData)
    self.account = try AccountID(xdrData: &xdrData)
    self.ext = try EmptyExt(xdrData: &xdrData)
  }
}
