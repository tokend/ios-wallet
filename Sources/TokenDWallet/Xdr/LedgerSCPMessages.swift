// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  struct LedgerSCPMessages
//  {
//      uint32 ledgerSeq;
//      SCPEnvelope messages<>;
//  };

//  ===========================================================================
public struct LedgerSCPMessages: XDRCodable {
  public var ledgerSeq: Uint32
  public var messages: [SCPEnvelope]

  public init(
      ledgerSeq: Uint32,
      messages: [SCPEnvelope]) {

    self.ledgerSeq = ledgerSeq
    self.messages = messages
  }

  public func toXDR() -> Data {
    var xdr = Data()

    xdr.append(self.ledgerSeq.toXDR())
    xdr.append(self.messages.toXDR())

    return xdr
  }

  public init(xdrData: inout Data) throws {
    self.ledgerSeq = try Uint32(xdrData: &xdrData)
    let lengthmessages = try Int32(xdrData: &xdrData)
    self.messages = [SCPEnvelope]()
    for _ in 1...lengthmessages {
      self.messages.append(try SCPEnvelope(xdrData: &xdrData))
    }
  }
}
