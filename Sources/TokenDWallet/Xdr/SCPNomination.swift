// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  struct SCPNomination
//  {
//      Hash quorumSetHash; // D
//      Value votes<>;      // X
//      Value accepted<>;   // Y
//  };

//  ===========================================================================
public struct SCPNomination: XDRCodable {
  public var quorumSetHash: Hash
  public var votes: [Value]
  public var accepted: [Value]

  public init(
      quorumSetHash: Hash,
      votes: [Value],
      accepted: [Value]) {

    self.quorumSetHash = quorumSetHash
    self.votes = votes
    self.accepted = accepted
  }

  public func toXDR() -> Data {
    var xdr = Data()

    xdr.append(self.quorumSetHash.toXDR())
    xdr.append(self.votes.toXDR())
    xdr.append(self.accepted.toXDR())

    return xdr
  }

  public init(xdrData: inout Data) throws {
    self.quorumSetHash = try Hash(xdrData: &xdrData)
    let lengthvotes = try Int32(xdrData: &xdrData)
    self.votes = [Value]()
    for _ in 1...lengthvotes {
      self.votes.append(try Value(xdrData: &xdrData))
    }
    let lengthaccepted = try Int32(xdrData: &xdrData)
    self.accepted = [Value]()
    for _ in 1...lengthaccepted {
      self.accepted.append(try Value(xdrData: &xdrData))
    }
  }
}
