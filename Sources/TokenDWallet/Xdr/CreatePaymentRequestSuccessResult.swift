// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  //: Result of the successful payment request creation
//  struct CreatePaymentRequestSuccessResult 
//  {
//      //: ID of the Payment request
//      uint64 requestID;
//      //: Indicates whether or not the payment request was auto approved
//      bool fulfilled;
//  
//      //: Result of the payment application
//      PaymentResult* paymentResult;
//  
//      //: reserved for future extension
//      EmptyExt ext;
//  };

//  ===========================================================================
public struct CreatePaymentRequestSuccessResult: XDRCodable {
  public var requestID: Uint64
  public var fulfilled: Bool
  public var paymentResult: PaymentResult?
  public var ext: EmptyExt

  public init(
      requestID: Uint64,
      fulfilled: Bool,
      paymentResult: PaymentResult?,
      ext: EmptyExt) {

    self.requestID = requestID
    self.fulfilled = fulfilled
    self.paymentResult = paymentResult
    self.ext = ext
  }

  public func toXDR() -> Data {
    var xdr = Data()

    xdr.append(self.requestID.toXDR())
    xdr.append(self.fulfilled.toXDR())
    xdr.append(self.paymentResult.toXDR())
    xdr.append(self.ext.toXDR())

    return xdr
  }

  public init(xdrData: inout Data) throws {
    self.requestID = try Uint64(xdrData: &xdrData)
    self.fulfilled = try Bool(xdrData: &xdrData)
    if (try Bool(xdrData: &xdrData)) {
      self.paymentResult = try PaymentResult(xdrData: &xdrData)
    } else {
      self.paymentResult = nil
    }
    self.ext = try EmptyExt(xdrData: &xdrData)
  }
}
