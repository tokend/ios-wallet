// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  struct SCPQuorumSet
//  {
//      uint32 threshold;
//      PublicKey validators<>;
//      SCPQuorumSet innerSets<>;
//  };

//  ===========================================================================
public struct SCPQuorumSet: XDRCodable {
  public var threshold: Uint32
  public var validators: [PublicKey]
  public var innerSets: [SCPQuorumSet]

  public init(
      threshold: Uint32,
      validators: [PublicKey],
      innerSets: [SCPQuorumSet]) {

    self.threshold = threshold
    self.validators = validators
    self.innerSets = innerSets
  }

  public func toXDR() -> Data {
    var xdr = Data()

    xdr.append(self.threshold.toXDR())
    xdr.append(self.validators.toXDR())
    xdr.append(self.innerSets.toXDR())

    return xdr
  }

  public init(xdrData: inout Data) throws {
    self.threshold = try Uint32(xdrData: &xdrData)
    let lengthvalidators = try Int32(xdrData: &xdrData)
    self.validators = [PublicKey]()
    for _ in 1...lengthvalidators {
      self.validators.append(try PublicKey(xdrData: &xdrData))
    }
    let lengthinnerSets = try Int32(xdrData: &xdrData)
    self.innerSets = [SCPQuorumSet]()
    for _ in 1...lengthinnerSets {
      self.innerSets.append(try SCPQuorumSet(xdrData: &xdrData))
    }
  }
}
