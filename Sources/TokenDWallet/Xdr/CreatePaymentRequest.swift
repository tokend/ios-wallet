// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  struct CreatePaymentRequest 
//  {
//      PaymentOp paymentOp;
//  
//      union switch (LedgerVersion v)
//      {
//      case EMPTY_VERSION:
//          void;
//      case MOVEMENT_REQUESTS_DETAILS:
//          longstring creatorDetails;
//      } ext;
//  };

//  ===========================================================================
public struct CreatePaymentRequest: XDRCodable {
  public var paymentOp: PaymentOp
  public var ext: CreatePaymentRequestExt

  public init(
      paymentOp: PaymentOp,
      ext: CreatePaymentRequestExt) {

    self.paymentOp = paymentOp
    self.ext = ext
  }

  public func toXDR() -> Data {
    var xdr = Data()

    xdr.append(self.paymentOp.toXDR())
    xdr.append(self.ext.toXDR())

    return xdr
  }

  public init(xdrData: inout Data) throws {
    self.paymentOp = try PaymentOp(xdrData: &xdrData)
    self.ext = try CreatePaymentRequestExt(xdrData: &xdrData)
  }

  public enum CreatePaymentRequestExt: XDRDiscriminatedUnion {
    case emptyVersion
    case movementRequestsDetails(Longstring)

    public var discriminant: Int32 {
      switch self {
      case .emptyVersion: return LedgerVersion.emptyVersion.rawValue
      case .movementRequestsDetails: return LedgerVersion.movementRequestsDetails.rawValue
      }
    }

    public func toXDR() -> Data {
      var xdr = Data()

      xdr.append(self.discriminant.toXDR())

      switch self {
      case .emptyVersion: xdr.append(Data())
      case .movementRequestsDetails(let data): xdr.append(data.toXDR())
      }

      return xdr
    }

    public init(xdrData: inout Data) throws {
      let discriminant = try Int32(xdrData: &xdrData)

      switch discriminant {
      case LedgerVersion.emptyVersion.rawValue: self = .emptyVersion
      case LedgerVersion.movementRequestsDetails.rawValue:
        let data = try Longstring(xdrData: &xdrData)
        self = .movementRequestsDetails(data)
      default:
        throw XDRErrors.unknownEnumCase
      }
    }

  }
}
