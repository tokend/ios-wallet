// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  enum LPAddLiquidityResultCode
//      {
//          //: LP add liquidity was successful
//          SUCCESS = 0,
//  
//          //: Assets in the pair are equal
//          SAME_ASSETS = -1,
//          //: Not enough funds in the source account
//          UNDERFUNDED = -2,
//          //: After adding liquidity, the destination balance will exceed the limit (total amount on the balance will be greater than UINT64_MAX)
//          BALANCE_OVERFLOW = -3,
//          //: Provided asset does not have a `SWAPPABLE` policy set
//          NOT_ALLOWED_BY_ASSET_POLICY = -4,
//          //: Source balance not found
//          SRC_BALANCE_NOT_FOUND = -5,
//          //: Zero desired amount not allowed
//          INVALID_DESIRED_AMOUNT = -6,
//          //: Zero min amount not allowed
//          INVALID_MIN_AMOUNT = -7,
//          //: Amount precision and asset precision are mismatched
//          INCORRECT_AMOUNT_PRECISION = -8,
//          //: Amount of first asset is insufficient to provide liquidity
//          INSUFFICIENT_FIRST_ASSET_AMOUNT = -9,
//          //: Amount of second asset is insufficient to provide liquidity
//          INSUFFICIENT_SECOND_ASSET_AMOUNT = -10,
//          //: Min amount cannot be bigger than desired amount
//          MIN_AMOUNT_BIGGER_THAN_DESIRED = -11,
//          //: Amount of the LP tokens to issue equals to zero
//          INSUFFICIENT_LIQUIDITY_PROVIDED = -12,
//          //: Source balances are equal
//          SAME_BALANCES = -13
//      };

//  ===========================================================================
public enum LPAddLiquidityResultCode: Int32, XDREnum {
  case success = 0
  case sameAssets = -1
  case underfunded = -2
  case balanceOverflow = -3
  case notAllowedByAssetPolicy = -4
  case srcBalanceNotFound = -5
  case invalidDesiredAmount = -6
  case invalidMinAmount = -7
  case incorrectAmountPrecision = -8
  case insufficientFirstAssetAmount = -9
  case insufficientSecondAssetAmount = -10
  case minAmountBiggerThanDesired = -11
  case insufficientLiquidityProvided = -12
  case sameBalances = -13
}
