// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  struct TransactionSet
//  {
//      Hash previousLedgerHash;
//      TransactionEnvelope txs<>;
//  };

//  ===========================================================================
public struct TransactionSet: XDRCodable {
  public var previousLedgerHash: Hash
  public var txs: [TransactionEnvelope]

  public init(
      previousLedgerHash: Hash,
      txs: [TransactionEnvelope]) {

    self.previousLedgerHash = previousLedgerHash
    self.txs = txs
  }

  public func toXDR() -> Data {
    var xdr = Data()

    xdr.append(self.previousLedgerHash.toXDR())
    xdr.append(self.txs.toXDR())

    return xdr
  }

  public init(xdrData: inout Data) throws {
    self.previousLedgerHash = try Hash(xdrData: &xdrData)
    let lengthtxs = try Int32(xdrData: &xdrData)
    self.txs = [TransactionEnvelope]()
    for _ in 1...lengthtxs {
      self.txs.append(try TransactionEnvelope(xdrData: &xdrData))
    }
  }
}
