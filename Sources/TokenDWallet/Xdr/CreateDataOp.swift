// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  struct CreateDataOp
//  {
//      //: Numeric type, used for access control
//      uint64 type;
//      //: Value to store
//      longstring value;
//  
//      //: Reserved for future extension
//      EmptyExt ext;
//  };

//  ===========================================================================
public struct CreateDataOp: XDRCodable {
  public var type: Uint64
  public var value: Longstring
  public var ext: EmptyExt

  public init(
      type: Uint64,
      value: Longstring,
      ext: EmptyExt) {

    self.type = type
    self.value = value
    self.ext = ext
  }

  public func toXDR() -> Data {
    var xdr = Data()

    xdr.append(self.type.toXDR())
    xdr.append(self.value.toXDR())
    xdr.append(self.ext.toXDR())

    return xdr
  }

  public init(xdrData: inout Data) throws {
    self.type = try Uint64(xdrData: &xdrData)
    self.value = try Longstring(xdrData: &xdrData)
    self.ext = try EmptyExt(xdrData: &xdrData)
  }
}
